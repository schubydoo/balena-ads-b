#!/command/with-contenv bash
# this ^ is a custom s6 helper for bringning in env variables
set -e

# Bring in the common scripts from sdr-enthusiasts base image
source /scripts/common

# Check if service has been disabled through the DISABLED_SERVICES environment variable.

if [[ ",$(echo -e "${DISABLED_SERVICES}" | tr -d '[:space:]')," = *",$BALENA_SERVICE_NAME,"* ]]; then
        echo "$BALENA_SERVICE_NAME is manually disabled. Sending request to stop the service:"
        curl --retry 10 --retry-all-errors --header "Content-Type:application/json" "$BALENA_SUPERVISOR_ADDRESS/v2/applications/$BALENA_APP_ID/stop-service?apikey=$BALENA_SUPERVISOR_API_KEY" -d '{"serviceName": "'$BALENA_SERVICE_NAME'"}'
        echo " "
        sleep infinity
fi

# Verify that all the required variables are set before starting up the application.

echo "Verifying settings..."
echo " "
sleep 2

missing_variables=false
        
# Begin defining all the required configuration variables.

[ -z "$LAT" ] && echo "Receiver latitude is missing, will abort startup." && missing_variables=true || echo "Receiver latitude is set: $LAT"
[ -z "$LON" ] && echo "Receiver longitude is missing, will abort startup." && missing_variables=true || echo "Receiver longitude is set: $LON"

if [ -z "${BEASTHOST}" ] && [ -z "${MLATHOST}" ] && [ -z "${READSB_DEVICE_TYPE}" ] && [ -z "${READSB_NET_CONNECTOR}" ] \
       && ! grep -qs -e 'adsb[^;]*_in' <<< "${ULTRAFEEDER_CONFIG}${ULTRAFEEDER_NET_CONNECTOR}"; then
  echo -e "WARNING: No obvious data input configured: BEASTHOST / MLATHOST / READSB_NET_CONNECTOR / READSB_DEVICE_TYPE environment variables not set."
  missing_variables=true
fi

# End defining all the required configuration variables.

echo " "

if [ "$missing_variables" = true ]
then
        echo "Settings missing, aborting..."
        echo " "
        sleep infinity
fi

echo "Settings verified, proceeding with startup."
echo " "

# We use LON for longitude but docker-tar1090 uses LONG
echo -n "$LON" > /var/run/s6/container_environment/LONG

# Check if Airspy stats enabled
radio_device_lower=$(echo "${RADIO_DEVICE_TYPE}" | tr '[:upper:]' '[:lower:]')
if [[ "$AIRSPY_ADSB_STATS" = "true" ]] && [[ "$radio_device_lower" = "airspy" ]]; then
    export ENABLE_AIRSPY=yes
    echo -n "yes" > /var/run/s6/container_environment/ENABLE_AIRSPY
    export URL_AIRSPY=http://dump1090-fa/airspy_adsb
    echo -n "http://dump1090-fa/airspy_adsb" > /var/run/s6/container_environment/URL_AIRSPY
fi

# Check if UAT enabled
if [[ "$UAT_ENABLED" = "true" ]]; then
    export ENABLE_978=yes
    echo -n "yes" > /var/run/s6/container_environment/ENABLE_978
    export URL_978=http://dump978-fa/skyaware978
    echo -n "http://dump978-fa/skyaware978" > /var/run/s6/container_environment/URL_978
fi